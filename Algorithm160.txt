#解题思路

#使用哈希表解决问题。
#把A或者B链表放到哈希表中，比较另一个链表中的node是否在该哈希表中，若存在，则返回对应node。

#代码


# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:
        nodeset = set()
        while headA :
            nodeset.add(headA)
            headA = headA.next

        while headB :
            if headB in nodeset : return headB
            headB = headB.next
        
        return None
