//Q:[面试题17，19]给定一个数组，包含从 1 到 N 所有的整数，但其中缺了两个数字。你能在 O(N) 时间内只用 O(1) 的空间找到它们吗？

//以任意顺序返回这两个数字均可。

//十分愚蠢、粗鲁、屌丝的暴力解法。使用分类讨论和枚举法。因为最后一个测试用例的是乱序，故使用sort排序后再来，及其屌丝。



import  java.util.Arrays;

class Solution {
    public int[] missingTwo(int[] nums) {
        Arrays.sort(nums);
        
        if(nums[0]==1 & nums.length == 1){
            return new int[]{2, 3};
        }
        if(nums[0]==3){
            return new int[]{1, 2};
        }
        if(nums[0]==2){
            for(int i = 0; i < nums.length ; i++){
                if( i == nums.length-1){
                    return new int[]{1,i+3};
                }
                if(nums[i+1]-nums[i]!=1){
                    return new int[]{1,i+3};
                }
            }
        }

        int result[] = {0,0};
        int counter = 0;

        for(int i = 0; i < nums.length ; i++) {
            if (i < nums.length - 1) {
                if (nums[i + 1] - nums[i] != 1) {
                    result[counter] = nums[i] + 1;
                    counter += 1;
                }
            }else{
                if(result[1]==0){
                    result[1] = i+3;
                }
            }
        }

        return result;
    }
}